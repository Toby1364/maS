{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "maS",
	"scopeName": "source.maS",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#lua" },
		{ "include": "#entities" },
		{ "include": "#constants" },
		{ "include": "#keywords" },
		{ "include": "#strings" }
	],
	"repository": {
		"lua": {
			"patterns": [
				{
					"name": "meta.embedded.block.lua",
					"begin": "\\blua\\s*\\{\\-\\-\\[\\[\\]\\]",
					"beginCaptures": {
						"0": { "name": "keyword.control.lua.block.begin" }
					},
					"end": "\\-\\-\\[\\[\\]\\]\\}",
					"endCaptures": {
						"0": { "name": "keyword.control.lua.block.end" }
					},
					"contentName": "source.lua",
					"patterns": [
						{
						"include": "source.lua"
						}
					]
				},
				{
					"name": "meta.embedded.block.lua",
					"begin": "\\blua\\s*\\{",
					"beginCaptures": {
						"0": { "name": "keyword.control.lua.block.begin" }
					},
					"end": "[ \\n]\\}",
					"endCaptures": {
						"0": { "name": "keyword.control.lua.block.end" }
					},
					"contentName": "source.lua",
					"patterns": [
						{
						"include": "source.lua"
						}
					]
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.mas",
					"match": "\\b(if|else|loop|while|do|for|in|break|return|goto|continue)\\b"
				},
				{
					"name": "keyword.declaration.mas",
					"match": "\\b(include|func|lua)\\b"
				},
				{
					"name": "keyword.declaration.variable.mas",
					"match": "\\b(let|mut)\\b"
				},
				{
					"name": "keyword.operator.mas",
					"match": "[=+\\-*/%!\\.#ยง:|&^](?![/*])"
				},
				{
					"name": "keyword.operator.mas",
					"match": "(?<![^-=\\s])[<>](?![^=\\s])"
				},
				{
					"name": "keyword.other.mas",
					"match": "\\b(using)\\b"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric.mas",
					"match": "(?<![\\w])(0x)?(?:\\d+\\.\\d+|\\d+\\.^\\.|\\.\\d+|\\d+)(?![\\w])"
				},
				{
					"name": "constant.numeric.mas",
					"match": "\\b0x[\\d\\w]+\\b"
				},
				{
					"name": "constant.language.mas",
					"match": "\\b(true|false|nil)\\b"
				},
				{
					"name": "invalid.illegal",
					"match": "([\\w\\d]*[^;{}<>=+\\-*/%!|&^]+\\n)(?![\\n\\t\\s]*})"
				}
			]
		},
		"entities": {
			"patterns": [
				{
					"name": "entity.name.function.mas",
					"match": "(\\w+)\\s*\\("
				},
				{
					"name": "",
					"match": "(?:\\bnamespace\\s*)(\\w+)(?:\\s*{)",
					"captures": {
						"0": { "name": "keyword.declaration.mas" },
						"1": { "name": "entity.name.namespace.mas" }
					}
				},
				{
					"name": "entity.name.type",
					"match": "\\b(Str|Num|Bool|Any|Table|Array)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.mas",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.mas",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.mas",
					"begin": "//",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.mas"
						}
					},
					"end": "$",
					"patterns": []
				},
				{
					"name": "comment.block.mas",
					"begin": "/\\*",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.begin.mas"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.end.mas"
						}
					},
					"patterns": []
				}
			]
		}
	}
}
